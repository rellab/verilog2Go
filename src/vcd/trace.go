package vcd

import (
	"fmt"
	"log"
	"os"
	"strconv"
	"time"
)

var moduleName string
var source string

func trace(moduleName string) {
	source = "$version Generated by verigo $end\n"
	source += "$date " + setDate() + "$end\n"
	source += "$timescale 1ns $end\n\n"
}

func close() {
	write()
}

func write() {
	os.Mkdir("generated", 0777)
	file, err := os.OpenFile("generated/"+moduleName+".vcd", os.O_WRONLY|os.O_CREATE, 0666)
	if err != nil {
		//エラー処理
		log.Fatal(err)
	}
	defer file.Close()
	fmt.Fprintln(file, source) //書き込み
}

func setDate() string {
	var date string
	t := time.Now()

	switch t.Weekday() {
	case 0:
		date = "Sun "
	case 1:
		date = "Mon "
	case 2:
		date = "Tue "
	case 3:
		date = "Wed "
	case 4:
		date = "Thu "
	case 5:
		date = "Fri "
	case 6:
		date = "Sat "
	}
	switch t.Month() {
	case 1:
		date += "Jan "
	case 2:
		date += "Feb "
	case 3:
		date += "Mar "
	case 4:
		date += "Apr "
	case 5:
		date += "May "
	case 6:
		date += "Jun "
	case 7:
		date += "Jul "
	case 8:
		date += "Aug "
	case 9:
		date += "Sep "
	case 10:
		date += "Oct "
	case 11:
		date += "Nov "
	case 12:
		date += "Dec "
	}

	date += strconv.Itoa(t.Day()) + " "
	date += strconv.Itoa(t.Hour()) + ":" + strconv.Itoa(t.Minute()) + ":" + strconv.Itoa(t.Second()) + " "
	date += strconv.Itoa(t.Year()) + " "

	return date
}
