$date
	Thu Sep  9 02:16:18 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tinycpu_test $end
$var wire 16 ! dbus [15:0] $end
$var wire 16 " qtop [15:0] $end
$var wire 12 # pcout [11:0] $end
$var wire 16 $ out [15:0] $end
$var wire 16 % irout [15:0] $end
$var wire 3 & cs [2:0] $end
$var wire 12 ' abus [11:0] $end
$var reg 1 ( clk $end
$var reg 16 ) in [15:0] $end
$var reg 1 * reset $end
$var reg 1 + run $end
$scope module tinycpu $end
$var wire 1 ( clk $end
$var wire 16 , dbus [15:0] $end
$var wire 16 - in [15:0] $end
$var wire 16 . qnext [15:0] $end
$var wire 16 / qtop [15:0] $end
$var wire 1 * reset $end
$var wire 1 + run $end
$var wire 16 0 ramout [15:0] $end
$var wire 12 1 pcout [11:0] $end
$var wire 16 2 out [15:0] $end
$var wire 16 3 irout [15:0] $end
$var wire 3 4 cs [2:0] $end
$var wire 16 5 aluout [15:0] $end
$var reg 12 6 abus [11:0] $end
$var reg 1 7 abus2pc $end
$var reg 1 8 alu2dbus $end
$var reg 1 9 cont $end
$var reg 1 : dbus2ir $end
$var reg 1 ; dbus2obuf $end
$var reg 1 < dbus2qtop $end
$var reg 1 = dbus2ram $end
$var reg 1 > halt $end
$var reg 1 ? in2dbus $end
$var reg 1 @ ir2abus $end
$var reg 1 A ir2dbus $end
$var reg 1 B pc2abus $end
$var reg 1 C pcinc $end
$var reg 1 D pop $end
$var reg 1 E push $end
$var reg 1 F qtop2dbus $end
$var reg 1 G ram2dbus $end
$scope module alu0 $end
$var wire 16 H a [15:0] $end
$var wire 16 I b [15:0] $end
$var wire 5 J f [4:0] $end
$var wire 16 K y [15:0] $end
$var wire 16 L x [15:0] $end
$var reg 16 M s [15:0] $end
$upscope $end
$scope module ir0 $end
$var wire 1 ( clk $end
$var wire 16 N d [15:0] $end
$var wire 1 O inc $end
$var wire 1 : load $end
$var wire 1 * reset $end
$var reg 16 P q [15:0] $end
$upscope $end
$scope module obuf0 $end
$var wire 1 ( clk $end
$var wire 16 Q d [15:0] $end
$var wire 1 R inc $end
$var wire 1 ; load $end
$var wire 1 * reset $end
$var reg 16 S q [15:0] $end
$upscope $end
$scope module pc0 $end
$var wire 1 ( clk $end
$var wire 12 T d [11:0] $end
$var wire 1 C inc $end
$var wire 1 7 load $end
$var wire 1 * reset $end
$var reg 12 U q [11:0] $end
$upscope $end
$scope module ram0 $end
$var wire 12 V addr [11:0] $end
$var wire 1 ( clk $end
$var wire 16 W d [15:0] $end
$var wire 1 = load $end
$var reg 16 X q [15:0] $end
$var integer 32 Y i [31:0] $end
$upscope $end
$scope module stack0 $end
$var wire 1 ( clk $end
$var wire 16 Z d [15:0] $end
$var wire 1 < load $end
$var wire 1 D pop $end
$var wire 1 E push $end
$var wire 16 [ qnext [15:0] $end
$var wire 16 \ qtop [15:0] $end
$var wire 1 * reset $end
$var integer 32 ] i [31:0] $end
$upscope $end
$scope module state0 $end
$var wire 1 ( clk $end
$var wire 1 9 cont $end
$var wire 1 > halt $end
$var wire 1 * reset $end
$var wire 1 + run $end
$var reg 3 ^ cs [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ^
b111 ]
b0 \
b0 [
bz Z
b1000000000000 Y
bx X
bz W
bx V
b0 U
bx T
b0 S
0R
bz Q
b0 P
0O
bz N
b0 M
b1000000000000000 L
b1000000000000000 K
b0 J
b0 I
b0 H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
bx 6
b0 5
b0 4
b0 3
b0 2
b0 1
bx 0
b0 /
b0 .
b0 -
bz ,
0+
0*
b0 )
0(
bx '
b0 &
b0 %
b0 $
b0 #
b0 "
bz !
$end
#5
b111 ]
1(
#10
0(
#15
b111 ]
1(
#20
0(
#25
b111 ]
1(
#30
0(
#35
b111 ]
1(
#40
0(
#45
b111 ]
1(
#50
0(
1+
#55
b111 ]
1(
#60
0(
b10 )
b10 -
#65
b111 ]
1(
#70
0(
#75
b111 ]
1(
#80
0(
#85
b111 ]
1(
#90
0(
#95
b111 ]
1(
#100
0(
#105
b111 ]
1(
#110
0(
#115
b111 ]
1(
#120
0(
#125
b111 ]
1(
#130
0(
#135
b111 ]
1(
#140
0(
#145
b111 ]
1(
#150
0(
#155
b111 ]
1(
#160
0(
b101 )
b101 -
#165
b111 ]
1(
#170
0(
#175
b111 ]
1(
#180
0(
#185
b111 ]
1(
#190
0(
#195
b111 ]
1(
#200
0(
#205
b111 ]
1(
#210
0(
#215
b111 ]
1(
#220
0(
#225
b111 ]
1(
#230
0(
#235
b111 ]
1(
#240
0(
#245
b111 ]
1(
#250
0(
#255
b111 ]
1(
#260
0(
#265
b111 ]
1(
#270
0(
#275
b111 ]
1(
#280
0(
#285
b111 ]
1(
#290
0(
#295
b111 ]
1(
#300
0(
#305
b111 ]
1(
#310
0(
#315
b111 ]
1(
#320
0(
#325
b111 ]
1(
#330
0(
#335
b111 ]
1(
#340
0(
#345
b111 ]
1(
#350
0(
#355
b111 ]
1(
#360
0(
#365
b111 ]
1(
#370
0(
#375
b111 ]
1(
#380
0(
#385
b111 ]
1(
#390
0(
#395
b111 ]
1(
#400
0(
#405
b111 ]
1(
#410
0(
#415
b111 ]
1(
#420
0(
#425
b111 ]
1(
#430
0(
#435
b111 ]
1(
#440
0(
#445
b111 ]
1(
#450
0(
#455
b111 ]
1(
#460
0(
#465
b111 ]
1(
#470
0(
#475
b111 ]
1(
#480
0(
#485
b111 ]
1(
#490
0(
#495
b111 ]
1(
#500
0(
#505
b111 ]
1(
#510
0(
#515
b111 ]
1(
#520
0(
#525
b111 ]
1(
#530
0(
#535
b111 ]
1(
#540
0(
#545
b111 ]
1(
#550
0(
#555
b111 ]
1(
#560
0(
#565
b111 ]
1(
#570
0(
#575
b111 ]
1(
#580
0(
#585
b111 ]
1(
#590
0(
#595
b111 ]
1(
#600
0(
#605
b111 ]
1(
#610
0(
#615
b111 ]
1(
#620
0(
#625
b111 ]
1(
#630
0(
#635
b111 ]
1(
#640
0(
#645
b111 ]
1(
#650
0(
#655
b111 ]
1(
#660
0(
